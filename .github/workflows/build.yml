name: Build

on:
  push:
    branches:
      - master

jobs:

  build:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        tool: ['GENERATOR']
        include:
          - tool: GENERATOR
            name: "Blockcore.Generator"
            solution: "Blockcore.Tools.sln"
            project: "src/Blockcore.Generator/Blockcore.Generator.csproj"
          - os: windows-latest
            extension: ".zip"
            runtime: "win-x64"
          - os: ubuntu-latest
            extension: ".tar.gz"
            runtime: "linux-x64"
          - os: macos-latest
            runtime: "osx-x64"
            extension: ".zip"
        node_version: [18]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    env:
      PROJECT_NAME: '${{ matrix.name }}'
      SOLUTION_PATH: '${{ matrix.solution }}'
      PROJECT_PATH: '${{ matrix.project }}'
      BUILD_CONFIGURATION: 'Release'

    steps:

    - uses: actions/checkout@v1
      name: Checkout

    - name: Setup Node.js (${{ matrix.node_version }})
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Variables
      run: |
        echo "::set-env name=VERSION::$(npm run version --silent)"
        echo "::set-env name=RELEASE_CONFIGURATION::${{ matrix.runtime }}"

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    # - name: Restore
    #   run: dotnet restore ${{env.SOLUTION_PATH}}

    # - name: Build
    #   run: dotnet build -c ${{env.BUILD_CONFIGURATION}} -r ${{env.RELEASE_CONFIGURATION}} -v m ${{env.SOLUTION_PATH}}

    - name: Publish
      run: dotnet publish -c ${{env.BUILD_CONFIGURATION}} -r ${{env.RELEASE_CONFIGURATION}} -v m -o ./bin/publish ${{env.PROJECT_PATH}}

    - name: Package Name
      run: |
        echo "::set-env name=RELEASE_NAME::${{ env.PROJECT_NAME }}-${{ env.VERSION }}-${{ env.RELEASE_CONFIGURATION }}${{ matrix.extension }}"
        echo "::set-env name=RELEASE_PATH::${{ env.PROJECT_NAME }}-${{ env.VERSION }}-${{ env.RELEASE_CONFIGURATION }}${{ matrix.extension }}"

    - name: Package (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "::set-env name=RELEASE_PATH::./bin/publish/${{env.RELEASE_NAME}}"
        cd ./bin/publish/
        tar cvzf ${{env.RELEASE_NAME}} *

    - name: Package (Windows)
      if: matrix.os == 'windows-latest'
      run: Compress-Archive -Path .\bin\publish\* -DestinationPath .\${{env.RELEASE_NAME}}

    - name: Package (Mac)
      if: matrix.os == 'macos-latest'
      run: zip -r ${{env.RELEASE_NAME}} ./bin/publish/

    - name: Release
      uses: sondreb/action-release@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: "${{env.RELEASE_PATH}}"
        draft: true
        prerelease: false
        body: ''
        name: "Blockcore Tools (Release ${{env.VERSION}})"
        tag: ${{env.VERSION}}
